
package GUI;

import java.util.Iterator;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;


import trabajofinal.Asignatura;
import trabajofinal.Controlador;
import trabajofinal.Cursada;
import trabajofinal.EmailInvalidoException;
import trabajofinal.EntidadInvalidaException;
import trabajofinal.HorarioNoViableException;
import trabajofinal.IdInvalidoException;
import trabajofinal.Mascaras;
import trabajofinal.Profesor;

/**
 *
 * @author Usuario
 */
public class VAsignaturaAlta extends javax.swing.JFrame {

    /** Creates new form Asignatura */
    public VAsignaturaAlta() {
        initComponents();
        this.addWindowListener(WindowSerializador.getInstance());
        vaciaCampos();
        cargaCorrelativas();
    }
    
    private void vaciaCampos()
    {
        TIdentificador.setText(Mascaras.genId(Asignatura.getSigIdentificacion(), Asignatura.prefijo));
        TNombre.setText("");
        ((DefaultTableModel) tablaCorrelativas.getModel()).setRowCount(0);
    }
    
    private void cargaCorrelativas()
    {
        CCorrelativa.removeAllItems();
        Iterator<Asignatura> asignaturas = Controlador.getInstance().getAsignaturasIterator();
        while (asignaturas.hasNext())
        {
            Asignatura asignatura = asignaturas.next();
            ComboItem item = new ComboItem(asignatura.getId(), asignatura.getNombre());
            CCorrelativa.addItem(item);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        Cabecera = new javax.swing.JPanel();
        lAsignatura = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Grilla = new javax.swing.JPanel();
        Legajo = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        Correlatividades = new javax.swing.JLabel();
        TIdentificador = new javax.swing.JTextField();
        TNombre = new javax.swing.JTextField();
        TCorrelatividades = new javax.swing.JScrollPane();
        tablaCorrelativas = new javax.swing.JTable();
        CCorrelativa = new javax.swing.JComboBox<>();
        AgregarCorrelativa = new javax.swing.JButton();
        Grabar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        quitarCorrelativa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Asignatura - Nuevo");

        Cabecera.setBackground(new java.awt.Color(204, 255, 255));
        Cabecera.setPreferredSize(new java.awt.Dimension(400, 50));

        lAsignatura.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lAsignatura.setText("Asignatura -");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Imagenes/aa0c19c7-d3a7-43d8-8664-2f08e5d0ca90.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Nuevo");

        javax.swing.GroupLayout CabeceraLayout = new javax.swing.GroupLayout(Cabecera);
        Cabecera.setLayout(CabeceraLayout);
        CabeceraLayout.setHorizontalGroup(
            CabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CabeceraLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        CabeceraLayout.setVerticalGroup(
            CabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CabeceraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAsignatura)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        getContentPane().add(Cabecera, java.awt.BorderLayout.PAGE_START);

        Grilla.setBackground(new java.awt.Color(105, 255, 204));

        Legajo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Legajo.setText("Identificacion");

        Nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Nombre.setText("Nombre");

        Correlatividades.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Correlatividades.setText("Correlativas");

        TIdentificador.setEditable(false);
        TIdentificador.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        TIdentificador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tablaCorrelativas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String [] {
                "Identificador", "Nombre"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        TCorrelatividades.setViewportView(tablaCorrelativas);
        if (tablaCorrelativas.getColumnModel().getColumnCount() > 0)
        {
            tablaCorrelativas.getColumnModel().getColumn(0).setHeaderValue("Identificador");
            tablaCorrelativas.getColumnModel().getColumn(1).setHeaderValue("Nombre");
        }

        CCorrelativa.setModel(new javax.swing.DefaultComboBoxModel<>(new ComboItem[] {}));
        CCorrelativa.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CCorrelativaActionPerformed(evt);
            }
        });

        AgregarCorrelativa.setText("Agregar");
        AgregarCorrelativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarCorrelativaActionPerformed(evt);
            }
        });

        Grabar.setBackground(new java.awt.Color(0, 153, 153));
        Grabar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Grabar.setText("GRABAR");
        Grabar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrabarActionPerformed(evt);
            }
        });

        Cancelar.setBackground(new java.awt.Color(0, 153, 153));
        Cancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Cancelar.setText("CANCELAR");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        quitarCorrelativa.setText("Quitar");
        quitarCorrelativa.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                quitarCorrelativaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GrillaLayout = new javax.swing.GroupLayout(Grilla);
        Grilla.setLayout(GrillaLayout);
        GrillaLayout.setHorizontalGroup(
            GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GrillaLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(GrillaLayout.createSequentialGroup()
                        .addComponent(Grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(Cancelar))
                    .addGroup(GrillaLayout.createSequentialGroup()
                        .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Legajo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Nombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Correlatividades))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TCorrelatividades, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(GrillaLayout.createSequentialGroup()
                                .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TIdentificador, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CCorrelativa, javax.swing.GroupLayout.Alignment.LEADING, 0, 125, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(AgregarCorrelativa)))))
                .addGap(18, 18, 18)
                .addComponent(quitarCorrelativa)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        GrillaLayout.setVerticalGroup(
            GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GrillaLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Legajo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nombre)
                    .addComponent(TNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarCorrelativa)
                    .addComponent(CCorrelativa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Correlatividades))
                .addGap(35, 35, 35)
                .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TCorrelatividades, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quitarCorrelativa))
                .addGap(52, 52, 52)
                .addGroup(GrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        getContentPane().add(Grilla, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void CCorrelativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CCorrelativaActionPerformed
    
    }//GEN-LAST:event_CCorrelativaActionPerformed
    
    private boolean isInTable(String id)
    {
        int i = 0;
        while (i < tablaCorrelativas.getRowCount() && !tablaCorrelativas.getValueAt(i, 0).equals(id))
            i++;
        return i < tablaCorrelativas.getRowCount();
    }
    
    private void AgregarCorrelativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarCorrelativaActionPerformed
        if (CCorrelativa.getItemCount() > 0)
        {
            DefaultTableModel model = (DefaultTableModel) tablaCorrelativas.getModel();
            ComboItem item = (ComboItem) CCorrelativa.getSelectedItem();
            if (!isInTable(item.getId()))
            {
                try
                {
                    Asignatura correlativa = Controlador.getInstance().consultaAsignatura(item.getId());
                    model.addRow(new Object[] { correlativa.getId(), correlativa.getNombre() });
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_AgregarCorrelativaActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        this.dispose();
        VentanaIndex principal= new VentanaIndex();
        principal.setVisible(true);
    }//GEN-LAST:event_CancelarActionPerformed

    private void GrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrabarActionPerformed
        if (TNombre.getText().equals(""))
            JOptionPane.showMessageDialog(null,"Ingrese Nombre");
        else
        {
            Controlador.getInstance().altaAsignatura(TNombre.getText());
            addCorrelativas();
            vaciaCampos();
            cargaCorrelativas();
            JOptionPane.showMessageDialog(null, "La asignatura ha sido dada de alta exitosamente");
        }
    }//GEN-LAST:event_GrabarActionPerformed
    
    private void addCorrelativas()
    {
        DefaultTableModel model = (DefaultTableModel) tablaCorrelativas.getModel();
        for (int i = 0; i < model.getRowCount(); i++)
        {
            try
            {
                Controlador.getInstance().addCorrelativa(TIdentificador.getText(), (String) model.getValueAt(i, 0));
            }
            catch (EntidadInvalidaException | IdInvalidoException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }
    
    private void quitarCorrelativaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_quitarCorrelativaActionPerformed
    {//GEN-HEADEREND:event_quitarCorrelativaActionPerformed
        if(tablaCorrelativas.getSelectedRows().length ==1)
        {
            DefaultTableModel model = (DefaultTableModel) tablaCorrelativas.getModel();
            model.removeRow(tablaCorrelativas.getSelectedRow());
        }
    }//GEN-LAST:event_quitarCorrelativaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarCorrelativa;
    private javax.swing.JComboBox<ComboItem> CCorrelativa;
    private javax.swing.JPanel Cabecera;
    private javax.swing.JButton Cancelar;
    private javax.swing.JLabel Correlatividades;
    private javax.swing.JButton Grabar;
    private javax.swing.JPanel Grilla;
    private javax.swing.JLabel Legajo;
    private javax.swing.JLabel Nombre;
    private javax.swing.JScrollPane TCorrelatividades;
    private javax.swing.JTextField TIdentificador;
    private javax.swing.JTextField TNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lAsignatura;
    private javax.swing.JButton quitarCorrelativa;
    private javax.swing.JTable tablaCorrelativas;
    // End of variables declaration//GEN-END:variables

}
