
package GUI;

import java.awt.Component;

import java.awt.event.WindowAdapter;

import java.util.Iterator;

import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

import trabajofinal.Alumno;
import trabajofinal.Asignatura;
import trabajofinal.Controlador;
import trabajofinal.Cursada;
import trabajofinal.IdInvalidoException;
import trabajofinal.Profesor;
import trabajofinal.Serializador;

/**
 *
 * @author Usuario
 */
public class VentanaIndex extends javax.swing.JFrame {
    private static VentanaIndex ventanaPrincipal = null;
    
    /** Creates new form VentanIndex */
    public VentanaIndex() {
        initComponents();
        this.addWindowListener(WindowSerializador.getInstance());
    }
    
    public static VentanaIndex getInstancia(){
        if (ventanaPrincipal == null)
            ventanaPrincipal= new VentanaIndex();
        return ventanaPrincipal;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanelVentana = new javax.swing.JPanel();
        jPanelMenu = new javax.swing.JPanel();
        jLabelLogoPGA = new javax.swing.JLabel();
        jButtonAgregar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonConsultar = new javax.swing.JButton();
        jPanelGeneral = new javax.swing.JPanel();
        jTabbedPanePrincipal = new javax.swing.JTabbedPane();
        jPanelSolapaAlumnos = new javax.swing.JPanel();
        jPanelCabecera = new javax.swing.JPanel();
        jLabelNombreAlumno = new javax.swing.JLabel();
        jTextFieldCampoParaNombreAlumno = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jLabelApellidoAlumno = new javax.swing.JLabel();
        jTextFieldCampoParaApellidoAlumno = new javax.swing.JTextField();
        jPanelGrilla = new javax.swing.JPanel();
        jScrollPaneAlumnos = new javax.swing.JScrollPane();
        jTableAlumnos = new javax.swing.JTable();
        jPanelSolapaProfesores = new javax.swing.JPanel();
        jPanelPCabecera = new javax.swing.JPanel();
        jLabelNombreProfesor = new javax.swing.JLabel();
        jTextFieldCampoParaNombreProfesor = new javax.swing.JTextField();
        jButtonPBuscar = new javax.swing.JButton();
        jLabelApellidoProfesor = new javax.swing.JLabel();
        jTextFieldCampoParaApellidoProfesor = new javax.swing.JTextField();
        jPanelPGrilla = new javax.swing.JPanel();
        jScrollPaneProfesores = new javax.swing.JScrollPane();
        jTableProfesores = new javax.swing.JTable();
        jPanelSolapaAsignaturas = new javax.swing.JPanel();
        jPanelACabecera = new javax.swing.JPanel();
        jPanelAsCabecera = new javax.swing.JPanel();
        jLabelAsignatura = new javax.swing.JLabel();
        jTextFieldCampoParaNombreAsignatura = new javax.swing.JTextField();
        jButtonABuscar = new javax.swing.JButton();
        jPanelAGrilla = new javax.swing.JPanel();
        jScrollPaneAsignaturas = new javax.swing.JScrollPane();
        jTableAsignaturas = new javax.swing.JTable();
        jPanelSolapaCursadas = new javax.swing.JPanel();
        jPanelCCabecera = new javax.swing.JPanel();
        jLabelCursada = new javax.swing.JLabel();
        jTextFieldCampoParaNombreCursada = new javax.swing.JTextField();
        jButtonCBuscar = new javax.swing.JButton();
        jPanelCGrilla = new javax.swing.JPanel();
        jScrollPaneCursadas = new javax.swing.JScrollPane();
        jTableCursadas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PGA-Programa de Gestion de Asignaturas");
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanelVentana.setLayout(new java.awt.BorderLayout());

        jPanelMenu.setBackground(new java.awt.Color(0, 102, 153));
        jPanelMenu.setLayout(new java.awt.GridLayout(5, 3, 5, 10));

        jLabelLogoPGA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Imagenes/aa0c19c7-d3a7-43d8-8664-2f08e5d0ca90.png"))); // NOI18N
        jPanelMenu.add(jLabelLogoPGA);

        jButtonAgregar.setBackground(new java.awt.Color(0, 102, 153));
        jButtonAgregar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.setBorder(null);
        jButtonAgregar.setBorderPainted(false);
        jButtonAgregar.setMargin(new java.awt.Insets(4, 4, 4, 4));
        jButtonAgregar.setMaximumSize(new java.awt.Dimension(80, 20));
        jButtonAgregar.setMinimumSize(new java.awt.Dimension(80, 20));
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jPanelMenu.add(jButtonAgregar);

        jButtonModificar.setBackground(new java.awt.Color(0, 102, 153));
        jButtonModificar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonModificar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonModificar.setText("Modificar");
        jButtonModificar.setBorderPainted(false);
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });
        jPanelMenu.add(jButtonModificar);

        jButtonEliminar.setBackground(new java.awt.Color(0, 102, 153));
        jButtonEliminar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setBorderPainted(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanelMenu.add(jButtonEliminar);

        jButtonConsultar.setBackground(new java.awt.Color(0, 102, 153));
        jButtonConsultar.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonConsultar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonConsultar.setText("Consultar");
        jButtonConsultar.setBorderPainted(false);
        jButtonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarActionPerformed(evt);
            }
        });
        jPanelMenu.add(jButtonConsultar);

        jPanelVentana.add(jPanelMenu, java.awt.BorderLayout.LINE_END);

        jPanelGeneral.setBackground(new java.awt.Color(0, 102, 153));

        jTabbedPanePrincipal.setBackground(new java.awt.Color(0, 153, 153));
        jTabbedPanePrincipal.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPanePrincipal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jPanelSolapaAlumnos.setBackground(new java.awt.Color(51, 255, 204));
        jPanelSolapaAlumnos.setForeground(new java.awt.Color(255, 255, 255));
        jPanelSolapaAlumnos.setLayout(new java.awt.BorderLayout());

        jPanelCabecera.setBackground(new java.awt.Color(204, 255, 255));
        jPanelCabecera.setPreferredSize(new java.awt.Dimension(357, 64));

        jLabelNombreAlumno.setText("Nombre");

        jTextFieldCampoParaNombreAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCampoParaNombreAlumnoActionPerformed(evt);
            }
        });
        jTextFieldCampoParaNombreAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCampoParaNombreAlumnoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCampoParaNombreAlumnoKeyTyped(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabelApellidoAlumno.setText("Apellido");

        jTextFieldCampoParaApellidoAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCampoParaApellidoAlumnoActionPerformed(evt);
            }
        });
        jTextFieldCampoParaApellidoAlumno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCampoParaApellidoAlumnoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCampoParaApellidoAlumnoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelCabeceraLayout = new javax.swing.GroupLayout(jPanelCabecera);
        jPanelCabecera.setLayout(jPanelCabeceraLayout);
        jPanelCabeceraLayout.setHorizontalGroup(
            jPanelCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCabeceraLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabelNombreAlumno)
                .addGap(10, 10, 10)
                .addComponent(jTextFieldCampoParaNombreAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabelApellidoAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jTextFieldCampoParaApellidoAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonBuscar)
                .addGap(130, 130, 130))
        );
        jPanelCabeceraLayout.setVerticalGroup(
            jPanelCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCabeceraLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanelCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreAlumno)
                    .addComponent(jTextFieldCampoParaNombreAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar)
                    .addComponent(jLabelApellidoAlumno)
                    .addComponent(jTextFieldCampoParaApellidoAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jPanelSolapaAlumnos.add(jPanelCabecera, java.awt.BorderLayout.PAGE_START);

        jPanelGrilla.setBackground(new java.awt.Color(102, 255, 204));

        jTableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Legajo", "Nombre", "Apellido", "Calle", "Numero", "Telefono", "Mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneAlumnos.setViewportView(jTableAlumnos);
        if (jTableAlumnos.getColumnModel().getColumnCount() > 0) {
            jTableAlumnos.getColumnModel().getColumn(0).setHeaderValue("Legajo");
            jTableAlumnos.getColumnModel().getColumn(1).setHeaderValue("Nombre");
            jTableAlumnos.getColumnModel().getColumn(2).setHeaderValue("Apellido");
            jTableAlumnos.getColumnModel().getColumn(3).setHeaderValue("Calle");
            jTableAlumnos.getColumnModel().getColumn(4).setHeaderValue("Numero");
            jTableAlumnos.getColumnModel().getColumn(5).setHeaderValue("Telefono");
            jTableAlumnos.getColumnModel().getColumn(6).setHeaderValue("Mail");
        }

        javax.swing.GroupLayout jPanelGrillaLayout = new javax.swing.GroupLayout(jPanelGrilla);
        jPanelGrilla.setLayout(jPanelGrillaLayout);
        jPanelGrillaLayout.setHorizontalGroup(
            jPanelGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGrillaLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPaneAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanelGrillaLayout.setVerticalGroup(
            jPanelGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGrillaLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPaneAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(722, Short.MAX_VALUE))
        );

        jPanelSolapaAlumnos.add(jPanelGrilla, java.awt.BorderLayout.CENTER);

        jTabbedPanePrincipal.addTab("Alumnos", jPanelSolapaAlumnos);

        jPanelSolapaProfesores.setBackground(new java.awt.Color(102, 255, 204));
        jPanelSolapaProfesores.setLayout(new java.awt.BorderLayout());

        jPanelPCabecera.setBackground(new java.awt.Color(204, 255, 255));
        jPanelPCabecera.setPreferredSize(new java.awt.Dimension(357, 64));

        jLabelNombreProfesor.setText("Nombre");

        jTextFieldCampoParaNombreProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCampoParaNombreProfesorActionPerformed(evt);
            }
        });
        jTextFieldCampoParaNombreProfesor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCampoParaNombreProfesorKeyTyped(evt);
            }
        });

        jButtonPBuscar.setText("Buscar");
        jButtonPBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPBuscarActionPerformed(evt);
            }
        });

        jLabelApellidoProfesor.setText("Apellido");

        jTextFieldCampoParaApellidoProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCampoParaApellidoProfesorActionPerformed(evt);
            }
        });
        jTextFieldCampoParaApellidoProfesor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCampoParaApellidoProfesorKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelPCabeceraLayout = new javax.swing.GroupLayout(jPanelPCabecera);
        jPanelPCabecera.setLayout(jPanelPCabeceraLayout);
        jPanelPCabeceraLayout.setHorizontalGroup(
            jPanelPCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPCabeceraLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabelNombreProfesor)
                .addGap(4, 4, 4)
                .addComponent(jTextFieldCampoParaNombreProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelApellidoProfesor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldCampoParaApellidoProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonPBuscar)
                .addGap(130, 130, 130))
        );
        jPanelPCabeceraLayout.setVerticalGroup(
            jPanelPCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPCabeceraLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanelPCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreProfesor)
                    .addComponent(jTextFieldCampoParaNombreProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPBuscar)
                    .addComponent(jLabelApellidoProfesor)
                    .addComponent(jTextFieldCampoParaApellidoProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jPanelSolapaProfesores.add(jPanelPCabecera, java.awt.BorderLayout.PAGE_START);

        jPanelPGrilla.setBackground(new java.awt.Color(102, 255, 204));

        jTableProfesores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Legajo", "Nombre", "Apellido", "Calle", "Numero", "Telefono", "Mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneProfesores.setViewportView(jTableProfesores);
        if (jTableProfesores.getColumnModel().getColumnCount() > 0) {
            jTableProfesores.getColumnModel().getColumn(0).setHeaderValue("Legajo");
            jTableProfesores.getColumnModel().getColumn(1).setHeaderValue("Nombre");
            jTableProfesores.getColumnModel().getColumn(2).setHeaderValue("Apellido");
            jTableProfesores.getColumnModel().getColumn(3).setHeaderValue("Calle");
            jTableProfesores.getColumnModel().getColumn(4).setHeaderValue("Numero");
            jTableProfesores.getColumnModel().getColumn(5).setHeaderValue("Telefono");
            jTableProfesores.getColumnModel().getColumn(6).setHeaderValue("Mail");
        }

        javax.swing.GroupLayout jPanelPGrillaLayout = new javax.swing.GroupLayout(jPanelPGrilla);
        jPanelPGrilla.setLayout(jPanelPGrillaLayout);
        jPanelPGrillaLayout.setHorizontalGroup(
            jPanelPGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPGrillaLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPaneProfesores, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanelPGrillaLayout.setVerticalGroup(
            jPanelPGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPGrillaLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPaneProfesores, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(724, Short.MAX_VALUE))
        );

        jPanelSolapaProfesores.add(jPanelPGrilla, java.awt.BorderLayout.CENTER);

        jTabbedPanePrincipal.addTab("Profesores", jPanelSolapaProfesores);

        jPanelSolapaAsignaturas.setBackground(new java.awt.Color(102, 255, 204));
        jPanelSolapaAsignaturas.setLayout(new java.awt.BorderLayout());

        jPanelACabecera.setPreferredSize(new java.awt.Dimension(357, 64));

        jPanelAsCabecera.setBackground(new java.awt.Color(204, 255, 255));
        jPanelAsCabecera.setPreferredSize(new java.awt.Dimension(357, 64));

        jLabelAsignatura.setText("Asignatura");

        jTextFieldCampoParaNombreAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCampoParaNombreAsignaturaActionPerformed(evt);
            }
        });

        jButtonABuscar.setText("Buscar");
        jButtonABuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonABuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAsCabeceraLayout = new javax.swing.GroupLayout(jPanelAsCabecera);
        jPanelAsCabecera.setLayout(jPanelAsCabeceraLayout);
        jPanelAsCabeceraLayout.setHorizontalGroup(
            jPanelAsCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAsCabeceraLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabelAsignatura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldCampoParaNombreAsignatura, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonABuscar)
                .addGap(130, 130, 130))
        );
        jPanelAsCabeceraLayout.setVerticalGroup(
            jPanelAsCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAsCabeceraLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanelAsCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAsignatura)
                    .addComponent(jTextFieldCampoParaNombreAsignatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonABuscar))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanelACabeceraLayout = new javax.swing.GroupLayout(jPanelACabecera);
        jPanelACabecera.setLayout(jPanelACabeceraLayout);
        jPanelACabeceraLayout.setHorizontalGroup(
            jPanelACabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelAsCabecera, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
        );
        jPanelACabeceraLayout.setVerticalGroup(
            jPanelACabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelACabeceraLayout.createSequentialGroup()
                .addComponent(jPanelAsCabecera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelSolapaAsignaturas.add(jPanelACabecera, java.awt.BorderLayout.PAGE_START);

        jPanelAGrilla.setBackground(new java.awt.Color(102, 255, 204));

        jTableAsignaturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificacion", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneAsignaturas.setViewportView(jTableAsignaturas);
        if (jTableAsignaturas.getColumnModel().getColumnCount() > 0) {
            jTableAsignaturas.getColumnModel().getColumn(0).setHeaderValue("Identificacion");
            jTableAsignaturas.getColumnModel().getColumn(1).setHeaderValue("Nombre");
        }

        javax.swing.GroupLayout jPanelAGrillaLayout = new javax.swing.GroupLayout(jPanelAGrilla);
        jPanelAGrilla.setLayout(jPanelAGrillaLayout);
        jPanelAGrillaLayout.setHorizontalGroup(
            jPanelAGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAGrillaLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPaneAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanelAGrillaLayout.setVerticalGroup(
            jPanelAGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAGrillaLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPaneAsignaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(717, Short.MAX_VALUE))
        );

        jPanelSolapaAsignaturas.add(jPanelAGrilla, java.awt.BorderLayout.CENTER);

        jTabbedPanePrincipal.addTab("Asignaturas", jPanelSolapaAsignaturas);

        jPanelSolapaCursadas.setBackground(new java.awt.Color(102, 255, 204));
        jPanelSolapaCursadas.setLayout(new java.awt.BorderLayout());

        jPanelCCabecera.setBackground(new java.awt.Color(204, 255, 255));
        jPanelCCabecera.setPreferredSize(new java.awt.Dimension(357, 64));

        jLabelCursada.setText("Cursada");

        jTextFieldCampoParaNombreCursada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCampoParaNombreCursadaActionPerformed(evt);
            }
        });

        jButtonCBuscar.setText("Buscar");
        jButtonCBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCCabeceraLayout = new javax.swing.GroupLayout(jPanelCCabecera);
        jPanelCCabecera.setLayout(jPanelCCabeceraLayout);
        jPanelCCabeceraLayout.setHorizontalGroup(
            jPanelCCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCCabeceraLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabelCursada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldCampoParaNombreCursada, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCBuscar)
                .addGap(130, 130, 130))
        );
        jPanelCCabeceraLayout.setVerticalGroup(
            jPanelCCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCCabeceraLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanelCCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCursada)
                    .addComponent(jTextFieldCampoParaNombreCursada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCBuscar))
                .addGap(19, 19, 19))
        );

        jPanelSolapaCursadas.add(jPanelCCabecera, java.awt.BorderLayout.PAGE_START);

        jPanelCGrilla.setBackground(new java.awt.Color(102, 255, 204));

        jTableCursadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificacion", "Asignatura", "Periodo", "Dia", "Hora Inicio", "Hora Fin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneCursadas.setViewportView(jTableCursadas);
        if (jTableCursadas.getColumnModel().getColumnCount() > 0) {
            jTableCursadas.getColumnModel().getColumn(0).setHeaderValue("Identificacion");
            jTableCursadas.getColumnModel().getColumn(1).setHeaderValue("Asignatura");
            jTableCursadas.getColumnModel().getColumn(2).setHeaderValue("Periodo");
            jTableCursadas.getColumnModel().getColumn(3).setHeaderValue("Dia");
            jTableCursadas.getColumnModel().getColumn(4).setHeaderValue("Hora Inicio");
            jTableCursadas.getColumnModel().getColumn(5).setHeaderValue("Hora Fin");
        }

        javax.swing.GroupLayout jPanelCGrillaLayout = new javax.swing.GroupLayout(jPanelCGrilla);
        jPanelCGrilla.setLayout(jPanelCGrillaLayout);
        jPanelCGrillaLayout.setHorizontalGroup(
            jPanelCGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCGrillaLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPaneCursadas, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanelCGrillaLayout.setVerticalGroup(
            jPanelCGrillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCGrillaLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPaneCursadas, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(717, Short.MAX_VALUE))
        );

        jPanelSolapaCursadas.add(jPanelCGrilla, java.awt.BorderLayout.CENTER);

        jTabbedPanePrincipal.addTab("Cursadas", jPanelSolapaCursadas);

        javax.swing.GroupLayout jPanelGeneralLayout = new javax.swing.GroupLayout(jPanelGeneral);
        jPanelGeneral.setLayout(jPanelGeneralLayout);
        jPanelGeneralLayout.setHorizontalGroup(
            jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePrincipal, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelGeneralLayout.setVerticalGroup(
            jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePrincipal, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanelVentana.add(jPanelGeneral, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelVentana);

        pack();
    }//GEN-END:initComponents

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        if (jPanelSolapaAlumnos.isShowing())
        {
            VAlumnoAlta.getInstancia().setVisible(true);
        }
        else if (jPanelSolapaProfesores.isShowing()){
            VProfesorAlta.getInstancia().setVisible(true);
        }
        else if (jPanelSolapaAsignaturas.isShowing())
        {
            VAsignaturaAlta.getInstancia().setVisible(true);
        }
        else if (jPanelSolapaCursadas.isShowing())
        {
            VCursadaAlta.getInstancia().setVisible(true);
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jTextFieldCampoParaNombreProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaNombreProfesorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCampoParaNombreProfesorActionPerformed

    private void jButtonPBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPBuscarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableProfesores.getModel();
        model.setRowCount(0);
        Iterator<Profesor> profesores = Controlador.getInstance().ubicaProfesor(jTextFieldCampoParaApellidoProfesor.getText(),
                                                                                jTextFieldCampoParaNombreProfesor.getText());
        while (profesores.hasNext())
        {
            Profesor profesor = profesores.next();
            model.addRow(new Object[] {profesor.getId(), profesor.getNombre(), profesor.getApellido(),
                         profesor.getDomicilio().getCalle(), profesor.getDomicilio().getNumero(),
                         profesor.getTelefono(), profesor.getEmail()});
        }
    }//GEN-LAST:event_jButtonPBuscarActionPerformed

    private void jTextFieldCampoParaNombreAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaNombreAsignaturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCampoParaNombreAsignaturaActionPerformed

    private void jButtonABuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonABuscarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableAsignaturas.getModel();
        model.setRowCount(0);
        Iterator<Asignatura> asignaturas = Controlador.getInstance().ubicaAsignatura(jTextFieldCampoParaNombreAsignatura.getText());
        while (asignaturas.hasNext())
        {
            Asignatura asignatura = asignaturas.next();
            model.addRow(new Object[] {asignatura.getId(), asignatura.getNombre()});
        }
    }//GEN-LAST:event_jButtonABuscarActionPerformed

    private void jTextFieldCampoParaNombreCursadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaNombreCursadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCampoParaNombreCursadaActionPerformed

    private void jButtonCBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCBuscarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableCursadas.getModel();
        model.setRowCount(0);
        Iterator<Cursada> cursadas = Controlador.getInstance().ubicaCursada(jTextFieldCampoParaNombreCursada.getText());
        while (cursadas.hasNext())
        {
            Cursada cursada = cursadas.next();
            model.addRow(new Object[] {cursada.getId(), cursada.getAsignatura().getNombre(), cursada.getPeriodo(),
                                       cursada.getDia(), cursada.getHoraInicio(), cursada.getHoraFin()});
        }
    }//GEN-LAST:event_jButtonCBuscarActionPerformed

    private void jTextFieldCampoParaNombreAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaNombreAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCampoParaNombreAlumnoActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableAlumnos.getModel();
        model.setRowCount(0);
        Iterator<Alumno> alumnos = Controlador.getInstance().ubicaAlumno(jTextFieldCampoParaApellidoAlumno.getText(),
                                                                         jTextFieldCampoParaNombreAlumno.getText());
        while (alumnos.hasNext())
        {
            Alumno alumno = alumnos.next();
            model.addRow(new Object[] {alumno.getId(), alumno.getNombre(), alumno.getApellido(),
                         alumno.getDomicilio().getCalle(), alumno.getDomicilio().getNumero(),
                         alumno.getTelefono(), alumno.getEmail()});
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if (jPanelSolapaAlumnos.isShowing())
        {
            Alumno alumno;
            if (jTableAlumnos.getSelectedRows().length == 1){
                try
                {
                    alumno =
                        Controlador.getInstance().consultaAlumno(jTableAlumnos.getValueAt(jTableAlumnos.getSelectedRow(), 0).toString());
                    VAlumnoModifica.getInstancia(alumno).setVisible(true);
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro");
                return;
            }     
        }
        else if (jPanelSolapaProfesores.isShowing())
        {
            Profesor profesor;
            if (jTableProfesores.getSelectedRows().length ==1){
                try
                {
                    profesor =
                        Controlador.getInstance().consultaProfesor((jTableProfesores.getValueAt(jTableProfesores.getSelectedRow(), 0)
                                                          .toString()));
                    VProfesorModifica.getInstancia(profesor).setVisible(true);
                } catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage()); 
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
                return;
            }
        }
        else if (jPanelSolapaAsignaturas.isShowing())
        {
            Asignatura asignatura;
            if (jTableAsignaturas.getSelectedRows().length ==1){
                try
                {
                    asignatura =
                        Controlador.getInstance().consultaAsignatura(jTableAsignaturas.getValueAt(jTableAsignaturas.getSelectedRow(), 0)
                        .toString());
                    VAsignaturaModifica.getInstancia(asignatura).setVisible(true);
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
                return;
            }
        }
        else if (jPanelSolapaCursadas.isShowing())
        {
            Cursada cursada;
            if (jTableCursadas.getSelectedRows().length ==1){
                try
                {
                    cursada =
                        Controlador.getInstance().consultaCursada((jTableCursadas.getValueAt(jTableCursadas.getSelectedRow(), 0)
                        .toString()));
                    VCursadaModifica.getInstancia(cursada).setVisible(true);
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                } 
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
                return;
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarActionPerformed
        if (jPanelSolapaAlumnos.isShowing())
        {
            Alumno alumno;
            if (jTableAlumnos.getSelectedRows().length == 1){
                try 
                {
                    alumno =
                        Controlador.getInstance().consultaAlumno(jTableAlumnos.getValueAt(jTableAlumnos.getSelectedRow(), 0).toString());
                    VAlumnoConsulta.getInstancia(alumno).setVisible(true);
                } 
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
                return;
            }
        }
        else if (jPanelSolapaProfesores.isShowing())
        {
            Profesor profesor;
            if (jTableProfesores.getSelectedRows().length == 1){
                try
                {
                    profesor =
                        Controlador.getInstance().consultaProfesor((jTableProfesores.getValueAt(jTableProfesores.getSelectedRow(), 0)
                        .toString()));
                    VProfesorConsulta.getInstancia(profesor).setVisible(true);
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
                return;
            }
        }
        else if (jPanelSolapaAsignaturas.isShowing())
        {
            Asignatura asignatura;
            if (jTableAsignaturas.getSelectedRows().length == 1){
                try
                {
                    asignatura=
                        Controlador.getInstance().consultaAsignatura(jTableAsignaturas.getValueAt(jTableAsignaturas.getSelectedRow(), 0)
                        .toString());
                    VAsignaturaConsulta.getInstancia(asignatura).setVisible(true);
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
                return;
            }
        }
        else if (jPanelSolapaCursadas.isShowing())
        {
            Cursada cursada;
            if (jTableCursadas.getSelectedRows().length == 1){
                try
                {
                    cursada =
                        Controlador.getInstance().consultaCursada((jTableCursadas.getValueAt(jTableCursadas.getSelectedRow(), 0)
                        .toString()));
                    VCursadaConsulta.getInstancia(cursada).setVisible(true);
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
                return;
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButtonConsultarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        if (jPanelSolapaAlumnos.isShowing())
        {
            Alumno alumno;
            if (jTableAlumnos.getSelectedRows().length == 1){
               try 
                {
                   alumno =
                       Controlador.getInstance().consultaAlumno(jTableAlumnos.getValueAt(jTableAlumnos.getSelectedRow(), 0).toString());
                    int seleccion= JOptionPane.showConfirmDialog(null,"�Esta seguro de eliminar?");
                    if (seleccion == JOptionPane.OK_OPTION)
                        Controlador.getInstance().bajaAlumno(jTableAlumnos.getValueAt(jTableAlumnos.getSelectedRow(), 0).toString());
                } 
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
            }
        }
        else if (jPanelSolapaProfesores.isShowing())
        {
            Profesor profesor;
            if (jTableProfesores.getSelectedRows().length == 1){
                try
                {
                    profesor =
                        Controlador.getInstance().consultaProfesor((jTableProfesores.getValueAt(jTableProfesores.getSelectedRow(), 0)
                        .toString()));
                    int seleccion= JOptionPane.showConfirmDialog(null,"�Esta seguro de eliminar?");
                    if (seleccion == JOptionPane.OK_OPTION)
                        Controlador.getInstance().bajaProfesor(jTableProfesores.getValueAt(jTableProfesores.getSelectedRow(), 0).toString());
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null,e.getMessage()); 
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
            }
        }
        else if (jPanelSolapaAsignaturas.isShowing())
        {
            Asignatura asignatura;
            if (jTableAsignaturas.getSelectedRows().length == 1){
                try
                {
                    asignatura=
                        Controlador.getInstance().consultaAsignatura(jTableAsignaturas.getValueAt(jTableAsignaturas.getSelectedRow(), 0)
                        .toString());
                    int seleccion= JOptionPane.showConfirmDialog(null,"�Esta seguro de eliminar?");
                    if (seleccion == JOptionPane.OK_OPTION)
                         Controlador.getInstance().bajaAsignatura(jTableAsignaturas.getValueAt(jTableAsignaturas.getSelectedRow(), 0).toString());
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null,e.getMessage()); 
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
            }
        }
        else if (jPanelSolapaCursadas.isShowing())
        {
            Cursada cursada;
            if (jTableCursadas.getSelectedRows().length == 1){
                try
                {
                    cursada =
                        Controlador.getInstance().consultaCursada((jTableCursadas.getValueAt(jTableCursadas.getSelectedRow(), 0)
                        .toString()));
                    int seleccion= JOptionPane.showConfirmDialog(null,"�Esta seguro de eliminar?");
                    if (seleccion == JOptionPane.OK_OPTION)
                        Controlador.getInstance().bajaCursada(jTableCursadas.getValueAt(jTableCursadas.getSelectedRow(), 0).toString());
                }
                catch (IdInvalidoException e)
                {
                    JOptionPane.showMessageDialog(null,e.getMessage()); 
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Debe seleccionar un registro"); 
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jTextFieldCampoParaApellidoAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaApellidoAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCampoParaApellidoAlumnoActionPerformed

    private void jTextFieldCampoParaApellidoProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaApellidoProfesorActionPerformed

    }//GEN-LAST:event_jTextFieldCampoParaApellidoProfesorActionPerformed
    
    private void jTextFieldCampoParaNombreAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaNombreAlumnoKeyTyped
        char TipoDeTecla = evt.getKeyChar();
        if (Character.isDigit(TipoDeTecla))
            evt.consume();
    }//GEN-LAST:event_jTextFieldCampoParaNombreAlumnoKeyTyped

    private void jTextFieldCampoParaApellidoAlumnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaApellidoAlumnoKeyTyped
        char TipoDeTecla = evt.getKeyChar();
        if (Character.isDigit(TipoDeTecla))
            evt.consume();
    }//GEN-LAST:event_jTextFieldCampoParaApellidoAlumnoKeyTyped

    private void jTextFieldCampoParaNombreProfesorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaNombreProfesorKeyTyped
        char TipoDeTecla = evt.getKeyChar();
        if (Character.isDigit(TipoDeTecla))
            evt.consume();
    }//GEN-LAST:event_jTextFieldCampoParaNombreProfesorKeyTyped

    private void jTextFieldCampoParaApellidoProfesorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCampoParaApellidoProfesorKeyTyped
        char TipoDeTecla = evt.getKeyChar();
        if (Character.isDigit(TipoDeTecla))
            evt.consume();
    }//GEN-LAST:event_jTextFieldCampoParaApellidoProfesorKeyTyped

    private void jTextFieldCampoParaNombreAlumnoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldCampoParaNombreAlumnoKeyPressed
    {//GEN-HEADEREND:event_jTextFieldCampoParaNombreAlumnoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCampoParaNombreAlumnoKeyPressed

    private void jTextFieldCampoParaApellidoAlumnoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldCampoParaApellidoAlumnoKeyPressed
    {//GEN-HEADEREND:event_jTextFieldCampoParaApellidoAlumnoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCampoParaApellidoAlumnoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        Serializador.deserializar();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(VentanaIndex.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(VentanaIndex.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(VentanaIndex.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(VentanaIndex.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new VentanaIndex().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonABuscar;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCBuscar;
    private javax.swing.JButton jButtonConsultar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonPBuscar;
    private javax.swing.JLabel jLabelApellidoAlumno;
    private javax.swing.JLabel jLabelApellidoProfesor;
    private javax.swing.JLabel jLabelAsignatura;
    private javax.swing.JLabel jLabelCursada;
    private javax.swing.JLabel jLabelLogoPGA;
    private javax.swing.JLabel jLabelNombreAlumno;
    private javax.swing.JLabel jLabelNombreProfesor;
    private javax.swing.JPanel jPanelACabecera;
    private javax.swing.JPanel jPanelAGrilla;
    private javax.swing.JPanel jPanelAsCabecera;
    private javax.swing.JPanel jPanelCCabecera;
    private javax.swing.JPanel jPanelCGrilla;
    private javax.swing.JPanel jPanelCabecera;
    private javax.swing.JPanel jPanelGeneral;
    private javax.swing.JPanel jPanelGrilla;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPanel jPanelPCabecera;
    private javax.swing.JPanel jPanelPGrilla;
    private javax.swing.JPanel jPanelSolapaAlumnos;
    private javax.swing.JPanel jPanelSolapaAsignaturas;
    private javax.swing.JPanel jPanelSolapaCursadas;
    private javax.swing.JPanel jPanelSolapaProfesores;
    private javax.swing.JPanel jPanelVentana;
    private javax.swing.JScrollPane jScrollPaneAlumnos;
    private javax.swing.JScrollPane jScrollPaneAsignaturas;
    private javax.swing.JScrollPane jScrollPaneCursadas;
    private javax.swing.JScrollPane jScrollPaneProfesores;
    private javax.swing.JTabbedPane jTabbedPanePrincipal;
    private javax.swing.JTable jTableAlumnos;
    private javax.swing.JTable jTableAsignaturas;
    private javax.swing.JTable jTableCursadas;
    private javax.swing.JTable jTableProfesores;
    private javax.swing.JTextField jTextFieldCampoParaApellidoAlumno;
    private javax.swing.JTextField jTextFieldCampoParaApellidoProfesor;
    private javax.swing.JTextField jTextFieldCampoParaNombreAlumno;
    private javax.swing.JTextField jTextFieldCampoParaNombreAsignatura;
    private javax.swing.JTextField jTextFieldCampoParaNombreCursada;
    private javax.swing.JTextField jTextFieldCampoParaNombreProfesor;
    // End of variables declaration//GEN-END:variables

}
